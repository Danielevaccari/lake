{"version":3,"sources":["Create.js","Meniu.js","Navbar.js","Products/Product.js","Products/Products.js","Cart/CartItem.js","Cart/Cart.js","library/commerce.js","Checkout/CustomTextField.js","Checkout/AddressForm.js","Checkout/Review.js","Checkout/PaymentForm.js","Checkout/Checkout.js","Webpage.js","App.js","index.js"],"names":["Create","props","useState","day","setDay","month","setMonth","year","setYear","className","Paper","elevation","TextField","label","FormControl","InputLabel","id","Select","native","value","onChange","event","target","Button","onClick","c","disableRipple","Meniu","username","setUsername","password","setPassword","ca","setCa","changeCa","prevCa","useStyles","makeStyles","listI","width","Navbar","totalItems","classes","state","setState","changeState","prevState","Typography","component","Link","to","placeholder","Badge","badgeContent","color","style","href","fontSize","Drawer","anchor","open","onClose","List","ListItem","divider","button","ListItemText","productView","height","img","padding","backgroundSize","cardActions","display","justifyContent","cardContent","Product","product","handleAddToCart","Card","CardMedia","image","media","source","CardContent","variant","gutterBottom","name","price","formatted_with_symbol","dangerouslySetInnerHTML","__html","description","CardActions","disableSpacing","IconButton","arial-abel","AddShoppingCart","content","backgroundColor","root","flexGrow","Products","products","Grid","container","justify","spacing","map","item","xs","sm","md","lg","cartProductImage","cardClass","cartItemButtons","alignItems","CartItem","handleRemoveFromCart","handleUpdateQuantity","alt","line_total","size","quantity","cart","margin","productList","singleProductGrid","cartLoad","cartLoadIcon","cartValues","paddingBottom","cartRight","flex","cartLeft","Cart","handleEmptyCart","EmptyCart","FilledCart","line_items","subtotal","Container","length","commerce","Commerce","process","CustomTextField","control","useFormContext","defaultValue","as","fullWidth","required","AddressForm","checkoutToken","next","shippingCountries","setShippingCountries","shippingCountry","setShippingCountry","shippingSubdivisions","setShippingSubdivisions","shippingSubdivision","setShippingSubdivision","shippingOptions","setShippingOptions","shippingOption","setShippingOption","methods","useForm","fetchShippingCountries","checkoutTokenId","a","services","localeListShippingCountries","countries","Object","keys","fetchSubdivisions","countryCode","localeListSubdivisions","subdivisions","fetchShippingOptions","country","stateProvince","checkout","getShippingOptions","region","options","useEffect","mount","onSubmit","handleSubmit","data","e","entries","MenuItem","sO","type","Review","disablePadding","live","primary","secondary","fontWeight","stripePromise","loadStripe","PaymentForm","backStep","shippingData","onCaptureCheckout","nextStep","elements","stripe","preventDefault","cardElement","getElement","CardElement","createPaymentMethod","card","error","paymentMethod","console","log","orderData","customer","firstname","firstName","lastname","lastName","email","billing","county_state","postal_zip_code","zip","street","address","town_city","city","shipping","fulfillment","shipping_method","payment","gateway","payment_method_id","Divider","disabled","CheckoutPaper","steps","Checkout","order","activeStep","setActiveStep","setCheckoutToken","setShippingData","Form","history","useHistory","generateToken","token","push","prevActiveStep","Confirmation","customer_reference","spinner","CircularProgress","Stepper","step","Step","StepLabel","Webpage","setProducts","setCart","setOrder","errorMessage","fetchProducts","list","fetchCart","retrieve","productId","add","update","remove","empty","refresCart","refresh","newCart","handleCaptureCheckout","newOrder","capture","incomingOrder","exact","path","total_items","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4d28957.chunk.js","sourcesContent":["import { React, useState } from 'react'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Select from '@material-ui/core/Select'\nimport { FormControl, InputLabel } from '@material-ui/core';\n\nconst Create = (props) => {\n\n    const [day, setDay] = useState('')\n    const [month, setMonth] = useState('')\n    const [year, setYear] = useState('')\n\n    const handleDayChange = (event) => {\n        setDay(event.target.value)\n    }\n    const handleMonthChange = (event) => {\n        setMonth(event.target.value)\n    }\n    const handleYearChange = (event) => {\n        setYear(event.target.value)\n    }\n    return (\n        <>\n            <div className='divC'>\n            \n                <div className='div1C'>\n                    <Paper elevation={6} className='paperC'>\n                        <h2 className='headerC'>Create account</h2>\n\n                        <TextField className='textField' label='Insert username'>\n\n                        </TextField>\n                        <TextField className='textField' label='Insert password'>\n\n                        </TextField>\n\n                        <form className='createBC'>\n                            <FormControl>\n                                <InputLabel id='d'>Day</InputLabel>\n                                <Select className='selectC' native value={day} onChange={handleDayChange}>\n                                    <option />\n                                    <option value={1}>1</option>\n                                    <option value={2}>2</option>\n                                    <option value={3}>3</option>\n                                </Select>\n                            </FormControl>\n\n                            <FormControl>\n                                <InputLabel id='m'>Month</InputLabel>\n                                <Select className='selectC' native value={month} onChange={handleMonthChange}>\n                                    <option />\n                                    <option value={'January'}>January</option>\n                                    <option value={'February'}>February</option>\n                                    <option value={'March'}>March</option>\n                                    <option value={'April'}>April</option>\n                                    <option value={'May'}>May</option>\n                                    <option value={'June'}>June</option>\n                                    <option value={'July'}>July</option>\n                                    <option value={'August'}>August</option>\n                                    <option value={'September'}>September</option>\n                                    <option value={'October'}>October</option>\n                                    <option value={'November'}>November</option>\n                                    <option value={'December'}>December</option>\n                                </Select>\n                            </FormControl>\n\n                            <FormControl>\n                                <InputLabel id='y'>Year</InputLabel>\n                                <Select className='selectC' native value={year} onChange={handleYearChange}>\n\n                                </Select>\n                            </FormControl>\n                        </form>\n                        <div className='createBC'>\n                            <Button onClick={props.c} disableRipple={true}>\n                                Back\n                            </Button>\n                            <Button disableRipple={true}>\n                                Create\n                            </Button>\n                        </div>\n                    </Paper>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Create\n","import { React, useState } from 'react'\nimport Create from './Create'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport './Styles.css'\n\n\nfunction Meniu() {\n    //User input states\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [ca, setCa] = useState(false)\n\n    const changeCa = () => {\n      setCa(prevCa => !prevCa)\n    }\n    //Handlers for user input\n    const handleUsername = (event) => {\n        setUsername(event.target.value)\n    }\n    const handlePassword = (event) => {\n        setPassword(event.target.value)\n    }\n\n    return (\n        <>\n            {/*add ! to make normal*/ ca &&\n                <div className='divC'>\n                    <div className='div1C'>\n                        <Paper elevation={6} className='paperC'>\n                            <h2 className='headerC'>LOG IN</h2>\n                            <TextField value={username} onChange={handleUsername} label='Username' className='textField'>\n\n                            </TextField>\n\n                            <TextField value={password} onChange={handlePassword} label='Password' className='textField'>\n\n                            </TextField>\n\n                            <Button onClick={changeCa} disableRipple={true}>Register</Button>\n                            <Button disableRipple={true}>\n                                Submit\n                            </Button>\n                            <div>{username}</div>\n                        </Paper>\n                    </div>\n                </div>}\n                {/*Create account render*/}\n                {ca && <Create c={changeCa}/>\n                }\n        </>\n    )\n}\n\nexport default Meniu\n","import { React, useState } from 'react'\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport { List, ListItem, ListItemText, makeStyles, Badge, Typography } from '@material-ui/core';\nimport AccountBoxSharpIcon from '@material-ui/icons/AccountBoxSharp';\nimport MenuSharp from '@material-ui/icons/MenuSharp';\nimport PhotoAlbumIcon from '@material-ui/icons/PhotoAlbum';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport {Link} from 'react-router-dom'\n\nconst useStyles = makeStyles({\n    listI: {\n        width: 300\n    }\n})\n\nfunction Navbar({ totalItems }) {\n\n    const classes = useStyles()\n\n    const [state, setState] = useState(false)\n\n    const changeState = () => {\n        setState(prevState => !prevState)\n    }\n\n    return (\n        <>\n            <div className='nav'>\n                <Typography component={Link} to='/' className='left'>\n                    Clothing INC\n                </Typography>\n\n                <div className='right'>\n                    <div className='links'>\n                        <input className='searchInput' placeholder='Search...'></input>\n                        <div className='link'>\n                            <Badge badgeContent={totalItems} color='primary'>\n                                <ShoppingCartIcon component={Link} to='/cart' style={{ color: 'grey' }} />\n                            </Badge>\n                        </div>\n                        <a className='link' href='/#'><AccountBoxSharpIcon style={{ color: 'white' }} /></a>\n                    </div>\n                </div>\n            </div>\n            {/*Second part of nav-bar*/}\n            <div className='categories'>\n                <Button onClick={changeState} className='mButton' disableRipple={true}>\n                    <MenuSharp style={{ color: 'white', fontSize: '30px' }} />\n                </Button>\n                <div className='category'>\n                    {/*Lisää tähän jotain jos haluat*/}\n                </div>\n            </div>\n            {/*Drawer*/}\n            <div>\n                <Drawer anchor={'left'} open={state} onClose={changeState}>\n                    <div onClick={changeState}>\n                        <List className={classes.listI}>\n                            <ListItem divider disableRipple={true} button>\n                                <ListItemText>\n                                    something\n                            </ListItemText>\n                            </ListItem>\n\n                            <ListItem divider disableRipple={true} button>\n                                <PhotoAlbumIcon />\n                                <ListItemText>\n                                    <div>Lookbook</div>\n                                </ListItemText>\n                            </ListItem>\n\n                            <ListItem divider disableRipple={true} button>\n                                <ListItemText>\n                                    About us\n                            </ListItemText>\n                            </ListItem>\n                        </List>\n                    </div>\n                </Drawer>\n            </div>\n        </>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport { CardActions, CardContent, CardMedia, IconButton, makeStyles, Typography } from '@material-ui/core';\nimport { AddShoppingCart } from '@material-ui/icons';\n\nconst useStyles = makeStyles({\n    productView: {\n        height: '100%'\n    },\n    img: {\n        height: '180px',\n        padding: '20%',\n        backgroundSize: 'auto'\n    },\n    cardActions: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    cardContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n})\n\nconst Product = ({ product, handleAddToCart }) => {\n\n    const classes = useStyles()\n\n    return (\n        <Card className={classes.productView}>\n            <CardMedia className={classes.img} image={product.media.source} />\n            <CardContent>\n                <div className={classes.cardContent}>\n                    <Typography variant='h5' gutterBottom>\n                        {product.name}\n                    </Typography>\n\n                    <Typography>\n                        {product.price.formatted_with_symbol}\n                    </Typography>\n                </div>\n                <Typography dangerouslySetInnerHTML={{ __html: product.description }} />\n            </CardContent>\n            <CardActions className={classes.cardActions} disableSpacing>\n                <IconButton arial-abel='Add to cart' onClick={() => handleAddToCart(product.id, 1)}>\n                    <AddShoppingCart />\n                </IconButton>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default Product","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Product from './Product'\n\n\nconst useStyles = makeStyles({\n    content: {\n        \n        backgroundColor: 'rgb(122,34,80)',\n        padding: '5%',\n        height: '100%'\n    },\n    root: {\n        flexGrow: 1,\n    }\n})\n\nconst Products = ({ products, handleAddToCart }) => {\n\n    const classes = useStyles()\n\n     /*if (products.line_items < 1) {\n        return (<div className={classes.cartLoad}>{<HourglassEmptyIcon className={classes.cartLoadIcon} />}</div>)\n    }*/\n\n    return (\n        <div className={classes.content}>\n            <Grid container justify=\"center\" spacing={4}>\n                {products && products.map((product) => (\n                    <Grid key={product.id} item xs={12} sm={6} md={4} lg={3}>\n                        <Product product={product} handleAddToCart={handleAddToCart}/>\n                    </Grid>\n                ))}\n            </Grid>\n        </div>\n    )\n}\nexport default Products\n","import React from 'react'\nimport { Typography, Button, Card, CardActions, CardContent, CardMedia, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    cartProductImage: {\n        height: '200px',\n        backgroundSize: 'auto'\n    },\n    cardClass: {\n        height: '330px',\n        width: '60%'\n    },\n    cartItemButtons: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%'\n    }\n})\n\nconst CartItem = ({ item, handleRemoveFromCart, handleUpdateQuantity }) => {\n\n    const classes = useStyles()\n\n    return (\n        <Card className={classes.cardClass}>\n            <CardMedia image={item.media.source} alt={item.name} className={classes.cartProductImage} />\n            <CardContent>\n                <Typography>\n                    {item.name}\n                </Typography>\n\n                <Typography>\n                    {item.line_total.formatted_with_symbol}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <div className={classes.cartItemButtons}>\n                    <Button size='small' onClick={() => handleUpdateQuantity(item.id, item.quantity - 1)}>-</Button>\n                    <Typography>{item.quantity}</Typography>\n                    <Button size='small' onClick={() => handleUpdateQuantity(item.id, item.quantity + 1)}>+</Button>\n                </div>\n                <Button onClick={() => handleRemoveFromCart(item.id)} size='small'>Remove</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default CartItem\n","import React from 'react'\nimport { Grid, Typography, Container, Button, makeStyles } from '@material-ui/core'\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport CartItem from './CartItem'\nimport { Link } from 'react-router-dom'\n\nconst useStyles = makeStyles({\n    cart: {\n        margin: '0',\n        height: '100vh',\n        width: '100vw'\n    },\n    productList: {\n        height: '100%',\n        width: '100%'\n    },\n    singleProductGrid: {\n\n    },\n    cartLoad: {\n        height: '100vh',\n        width: '100vw',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    cartLoadIcon: {\n        fontSize: '100px'\n    },\n    cartValues: {\n        display: 'flex',\n        paddingBottom: '2%'\n    },\n    cartRight: {\n        width: '100%',\n        flex: '50%',\n        justifyContent: 'center'\n    },\n    cartLeft: {\n        flex: '50%'\n    }\n\n})\n\nconst Cart = ({ cart, handleEmptyCart, handleRemoveFromCart, handleUpdateQuantity }) => {\n\n    const classes = useStyles()\n\n    const EmptyCart = () => (\n        <Typography>\n            You have no items in your cart, Start Adding !\n        </Typography>\n    )\n\n    const FilledCart = () => (\n\n        <>\n            <Button component={Link} to='/' style={{ height: '50px' }}>go back</Button>\n            <Grid className={classes.productList} container spacing={2}>\n                {cart.line_items && cart.line_items.map((item) => (\n                    <Grid item className={classes.singleProductGrid} xs={12} sm={4} key={item.id}>\n                        <CartItem item={item} handleRemoveFromCart={handleRemoveFromCart} handleUpdateQuantity={handleUpdateQuantity} />\n                    </Grid>\n                ))}\n            </Grid>\n            <div className={classes.cartValues}>\n                <div className={classes.cartLeft}>\n                    <Typography>\n                        Total: {cart.subtotal.formatted_with_symbol}\n                    </Typography>\n                </div>\n\n                <div className={classes.cartRight}>\n                    <Button onClick={handleEmptyCart} disableRipple={true} variant='contained' >\n                        Clear cart\n                    </Button>\n\n                    <Button component={Link} to='/checkout' disableRipple={true} variant='contained'>\n                        Checkout\n                    </Button>\n                </div>\n            </div>\n        </>\n    )\n\n    if (!cart.line_items) {\n        return (<div className={classes.cartLoad}>{<HourglassEmptyIcon className={classes.cartLoadIcon} />}</div>)\n    }\n\n    return (\n        <div>\n            <Container className={classes.cart}>\n                <Typography variant='h3'>\n                    Cart<Button component={Link} to='/' style={{ height: '50px' }}>go back</Button>\n                </Typography>\n                {!cart.line_items.length ? <EmptyCart /> : <FilledCart />}\n            </Container>\n        </div>\n\n    )\n}\n\nexport default Cart","import Commerce from '@chec/commerce.js'\n\nexport const commerce = new Commerce(process.env.REACT_APP_CLOTHING_INC_PUBLIC_KEY, true)\n\n","import React from 'react'\nimport { TextField, Grid } from '@material-ui/core'\nimport { useFormContext, Controller } from 'react-hook-form'\n\nconst CustomTextField = ({ name, label }) => {\n\n    const { control } = useFormContext()\n\n    return (\n        <Grid item xs={12} sm={6}>\n            <Controller \n                defaultValue=''\n                as={TextField}\n                control={control}\n                fullWidth\n                name={name}\n                label={label}\n                required\n            />\n        </Grid>\n    )\n}\n\nexport default CustomTextField\n","import React, { useState, useEffect } from 'react'\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core'\nimport { useForm, FormProvider } from 'react-hook-form'\nimport CustomTextField from './CustomTextField'\nimport { commerce } from '../library/commerce'\nimport { Link } from 'react-router-dom'\n\nconst AddressForm = ({ checkoutToken, next }) => {\n\n    const [shippingCountries, setShippingCountries] = useState([])\n    const [shippingCountry, setShippingCountry] = useState('')\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([])\n    const [shippingSubdivision, setShippingSubdivision] = useState('')\n    const [shippingOptions, setShippingOptions] = useState([])\n    const [shippingOption, setShippingOption] = useState('')\n    const methods = useForm()\n\n    const fetchShippingCountries = async (checkoutTokenId) => {\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId)\n\n        setShippingCountries(countries)\n        setShippingCountry(Object.keys(countries)[0])\n    }\n\n    const fetchSubdivisions = async (countryCode) => {\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode)\n\n        setShippingSubdivisions(subdivisions)\n        setShippingSubdivision(Object.keys(subdivisions)[0])\n    }\n\n    const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince })\n\n        setShippingOptions(options)\n        setShippingOption(options[0].id)\n    }\n\n    useEffect(() => {\n        let mount = true\n        if (mount) {\n            fetchShippingCountries(checkoutToken.id)\n        }\n        return () => mount = false;\n    }, [])\n\n    useEffect(() => {\n        if (shippingCountry) fetchSubdivisions(shippingCountry)\n    }, [shippingCountry])\n\n    useEffect(() => {\n        if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision)\n    }, [shippingSubdivision])\n\n    return (\n        <>\n            <Typography variant='h6' gutterBottom>Shipping address</Typography>\n            <FormProvider {...methods}>\n                <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\n                    <Grid container spacing={3}>\n                        <CustomTextField name='firstName' label='First name' />\n                        <CustomTextField name='lastName' label='Last name' />\n                        <CustomTextField name='address' label='Address' />\n                        <CustomTextField name='email' label='Email' />\n                        <CustomTextField name='city' label='City' />\n                        <CustomTextField name='zip' label='Zip / Postal code' />\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Country</InputLabel>\n                            <Select value={shippingCountry} fullWidth\n                                onChange={(e) => setShippingCountry(e.target.value)}>\n                                {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\n                                    <MenuItem key={item.id} value={item.id}>\n                                        {item.label}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Subdivision</InputLabel>\n                            <Select value={shippingSubdivision} fullWidth\n                                onChange={(e) => setShippingSubdivision(e.target.value)}>\n                                {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\n                                    <MenuItem key={item.id} value={item.id}>\n                                        {item.label}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Options</InputLabel>\n                            <Select value={shippingOption} fullWidth\n                                onChange={(e) => setShippingOption(e.target.value)}>\n                                {shippingOptions && shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\n                                    <MenuItem key={item.id} value={item.id}>\n                                        {item.label}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                    </Grid>\n                    <br />\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <Button component={Link} to='/cart' variant='outlined'>Back to cart</Button>\n                        <Button type='submit' variant='contained'>Next</Button>\n                    </div>\n                </form>\n            </FormProvider>\n        </>\n    )\n}\n\nexport default AddressForm\n","import React from 'react'\nimport { Typography, List, ListItem, ListItemText } from '@material-ui/core'\n\nconst Review = ({ checkoutToken }) => {\n    return (\n        <>\n            <Typography variant='h6' gutterBottom>Order Summary</Typography>\n            <List disablePadding>\n                {checkoutToken.live.line_items.map((product) => (\n                    <ListItem style={{ padding: '1%' }} key={product.name}>\n                        <ListItemText primary={product.name} secondary={`Quantity: ${product.quantity}`} />\n                        <Typography variant='body2'>{product.line_total.formatted_with_symbol}</Typography>\n                    </ListItem>))}\n                <ListItem>\n                    <ListItemText primary='Total' />\n                    <Typography variant='subtitle1' style={{ fontWeight: '700' }}>\n                        {checkoutToken.live.subtotal.formatted_with_symbol}\n                    </Typography>\n                </ListItem>\n            </List>\n        </>\n    )\n}\n\nexport default Review\n","import React from 'react'\nimport { Typography, Button, Divider } from '@material-ui/core'\nimport { Elements, CardElement, ElementsConsumer } from '@stripe/react-stripe-js'\nimport { loadStripe } from '@stripe/stripe-js'\nimport Review from './Review'\n\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_KEY)\n\nconst PaymentForm = ({ checkoutToken, backStep, shippingData, onCaptureCheckout, nextStep }) => {\n\n    const handleSubmit = async (event, elements, stripe) => {\n        event.preventDefault()\n\n        if (!stripe || !elements) return\n\n        const cardElement = elements.getElement(CardElement)\n        const { error, paymentMethod } = await stripe.createPaymentMethod({ type: 'card', card: cardElement })\n\n        if (error) {\n            console.log(error)\n        }\n        else {\n            const orderData = {\n                line_items: checkoutToken.live.line_items,\n                customer: { firstname: shippingData.firstName, lastname: shippingData.lastName, email: shippingData.email },\n                billing: {\n                    name: shippingData.firstName,\n                    county_state: shippingData.shippingSubdivision,\n                    postal_zip_code: shippingData.zip,\n                    country: shippingData.shippingCountry,\n                    street: shippingData.address,\n                    town_city: shippingData.city,\n                },\n                shipping: {\n                    country: shippingData.shippingCountry,\n                    street: shippingData.address,\n                    town_city: shippingData.city,\n                    name: 'International',\n                },\n                fulfillment: { shipping_method: shippingData.shippingOption },\n                payment: {\n                    gateway: 'stripe',\n                    stripe: {\n                        payment_method_id: paymentMethod.id\n                    }\n                }\n            }\n            onCaptureCheckout(checkoutToken.id, orderData)\n            nextStep()\n        }\n\n    }\n\n    return (\n        <>\n            <Review checkoutToken={checkoutToken} />\n            <Divider />\n            <Typography variant='h6' gutterBottom style={{ margin: '20px' }}>Payment method</Typography>\n            <Elements stripe={stripePromise}>\n                <ElementsConsumer>\n                    {({ elements, stripe }) => (\n                        <form onSubmit={(e) => handleSubmit(e, elements, stripe)}>\n                            <CardElement />\n                            <br /><br />\n                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                <Button variant='outlined' onClick={backStep}>Back</Button>\n                                <Button type='submit' variant='contained' disabled={!stripe}>Pay {checkoutToken.live.subtotal.formatted_with_symbol}</Button>\n                            </div>\n                        </form>\n                    )}\n                </ElementsConsumer>\n            </Elements>\n        </>\n    )\n}\n\nexport default PaymentForm\n","import { React, useState, useEffect } from 'react'\nimport { Paper, Stepper, Step, StepLabel, Typography, Divider, Button, makeStyles, CircularProgress } from '@material-ui/core'\nimport AddressForm from './AddressForm'\nimport PaymentForm from './PaymentForm'\nimport { commerce } from '../library/commerce'\nimport { Link, useHistory } from 'react-router-dom'\n\nconst useStyles = makeStyles({\n    CheckoutPaper: {\n        padding: '5%',\n        width: '50%'\n    }\n})\n\nconst steps = ['Shipping address', 'Payment details']\n\nconst Checkout = ({ cart, order, onCaptureCheckout, error }) => {\n\n    const [activeStep, setActiveStep] = useState(0)\n    const [checkoutToken, setCheckoutToken] = useState(null)\n    const [shippingData, setShippingData] = useState({})\n    const Form = () => activeStep === 0 ? <AddressForm next={next} checkoutToken={checkoutToken} /> : <PaymentForm shippingData={shippingData} checkoutToken={checkoutToken} backStep={backStep} onCaptureCheckout={onCaptureCheckout} nextStep={nextStep} />\n    const classes = useStyles()\n    const history = useHistory()\n\n    useEffect(() => {\n        if (cart.id) {\n            const generateToken = async () => {\n                try {\n                    const token = await commerce.checkout.generateToken(cart.id, { type: 'cart' })\n                    setCheckoutToken(token)\n                    console.log(token)\n                    console.log(cart)\n                } catch (error) {\n                    if (activeStep !== steps.length) history.push('/');\n                }\n            }\n            generateToken()\n        }\n    }, [cart])\n\n    const nextStep = () => setActiveStep(prevActiveStep => prevActiveStep + 1)\n    const backStep = () => setActiveStep(prevActiveStep => prevActiveStep - 1)\n\n    const next = (data) => {\n        setShippingData(data)\n        nextStep()\n    }\n\n    let Confirmation = () => (order.customer ? (\n        <>\n            <div>\n                <Typography variant=\"h5\">Thank you for your purchase, {order.customer.firstname} {order.customer.lastname}!</Typography>\n                <Divider className={classes.divider} />\n                <Typography variant=\"subtitle2\">Order ref: {order.customer_reference}</Typography>\n            </div>\n            <br />\n            <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\n        </>\n    ) : (\n        <div className={classes.spinner}>\n            <CircularProgress />\n        </div>\n    ))\n\n    if (error) {\n        Confirmation = () => (\n            <>\n                <Typography variant=\"h5\">Error: {error}</Typography>\n                <br />\n                <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\n            </>\n        );\n    }\n\n    return (\n        <>\n            <main style={{ display: 'flex', justifyContent: 'center', height: '100vh', alignItems: 'center' }}>\n                <Paper className={classes.CheckoutPaper}>\n                    <Typography variant='h4'>Checkout</Typography>\n                    <Stepper activeStep={activeStep}>{steps.map((step) => (\n                        <Step key={step}>\n                            <StepLabel>{step}</StepLabel>\n                        </Step>\n                    ))}\n                    </Stepper>\n                    {activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form />}\n                </Paper>\n            </main>\n        </>\n    )\n}\n\nexport default Checkout\n","import React, { useState, useEffect } from 'react'\nimport Navbar from './Navbar'\nimport Products from './Products/Products'\nimport Cart from './Cart/Cart'\nimport { commerce } from './library/commerce'\nimport { Switch, Route, HashRouter } from 'react-router-dom'\nimport Checkout from './Checkout/Checkout'\n\nfunction Webpage() {\n\n    const [products, setProducts] = useState([])\n    const [cart, setCart] = useState({})\n    const [order, setOrder] = useState({})\n    const [errorMessage, setErrorMessage] = useState('')\n\n    const fetchProducts = async () => {\n        const { data } = await commerce.products.list()\n        setProducts(data)\n    }\n    const fetchCart = async () => {\n        setCart(await commerce.cart.retrieve())\n    }\n\n    const handleAddToCart = async (productId, quantity) => {\n        const { cart } = await commerce.cart.add(productId, quantity)\n        setCart(cart)\n    }\n    const handleUpdateQuantity = async (productId, quantity) => {\n        const { cart } = await commerce.cart.update(productId, { quantity })\n        setCart(cart)\n    }\n    const handleRemoveFromCart = async (productId) => {\n        const { cart } = await commerce.cart.remove(productId)\n        setCart(cart)\n    }\n    const handleEmptyCart = async () => {\n        const { cart } = await commerce.cart.empty()\n        setCart(cart)\n    }\n    const refresCart = async () => {\n        const newCart = await commerce.cart.refresh()\n        setCart(newCart)\n    }\n    const handleCaptureCheckout = async (checkoutTokenId, newOrder) => {\n        try {\n            const incomingOrder = await commerce.checkout.capture(checkoutTokenId, newOrder)\n            setOrder(incomingOrder)\n            refresCart()\n        } catch (error) {\n            \n        }\n    }\n    useEffect(() => {\n        fetchProducts()\n        fetchCart()\n    }, [])\n\n    return (\n        <>\n            <HashRouter>\n                <Switch>\n\n                    <Route exact path='/'>\n                        <div className='web1'>\n                            <Navbar totalItems={cart.total_items} />\n                        </div>\n                        <Products products={products} handleAddToCart={handleAddToCart} />\n                    </Route>\n\n                    <Route exact path='/cart'>\n                        <Navbar totalItems={cart.total_items} />\n                        <div className='web2'>\n\n                            <Cart cart={cart}\n                                handleEmptyCart={handleEmptyCart}\n                                handleRemoveFromCart={handleRemoveFromCart}\n                                handleUpdateQuantity={handleUpdateQuantity} />\n                        </div>\n                    </Route>\n                    <Route exact path='/checkout'>\n                        <Navbar totalItems={cart.total_items} />\n                        <Checkout cart={cart} order={order} onCaptureCheckout={handleCaptureCheckout} error={errorMessage} />\n                    </Route>\n\n                </Switch>\n            </HashRouter>\n        </>\n    )\n}\n\nexport default Webpage\n","import React from 'react'\nimport Meniu from './Meniu'\nimport Webpage from './Webpage'\n\nimport './NavStyles.css'\nimport './ClothStyles.css'\n\nfunction App() {\n\n  return (\n    <>\n      <Meniu />\n      <Webpage />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}